
/* general ----------------------------------------------*/
:root{
    --main-color: rgb(0, 105, 197);
    --p-color: rgb(31, 31, 31);
    --background-color:rgb(163, 163, 163);
    scroll-behavior: smooth;
}
*:focus{
    outline: 1px solid var(--main-color);
}
/* *{
    outline: 1px solid rgb(255, 0, 0);
} */
body{
    font-family: Arial, sans-serif;
    margin: 0;
    /* background-image: url("../img/background.jpg");
    background-repeat: no-repeat;
    background-position: center;
    background-attachment: fixed;
    background-size: cover; */
    background-color: var(--background-color);
    background: linear-gradient(120deg, rgb(209, 209, 209), var(--background-color));
}
.grid{
    display: grid;
}
.wraper{
    margin-inline: auto;;
    width: clamp(320px, calc(100% - 8rem), 2000px);
    min-height: 100dvh;
    position: relative;
    /* outline: 1px solid rgb(255, 0, 0); */
}
h1, h2{
    color: var(--main-color);
}
h3, p{
    color: var(--p-color);
}
p{
    text-indent: clamp(1.7rem, 2rem, 1.2rem);
    font-size: clamp(0.6rem, 1rem, 1.2rem);
    color: var(--p-color);
    text-align: justify;
}
hr{
    border-color: var(--main-color);
}
a{
    color: var(--main-color);
    text-decoration: none;
}
a:hover{
    color: rgb(2, 137, 255);
}
.neumorphism{
    box-shadow: 0.3rem 0.3rem 0.4rem rgba(0, 0, 0, 0.478), -0.2rem -0.2rem 0.2rem rgba(255, 255, 255, 0.601), inset -0.2rem -0.2rem 0.2rem rgba(255, 255, 255, 0.89), inset 0.3rem 0.3rem 0.4rem rgba(0, 0, 0, 0.478);
    border: 0px;
}
.neumorphism-raise{
    box-shadow: 0.3rem 0.3rem 0.4rem rgba(0, 0, 0, 0.478), -0.2rem -0.2rem 0.2rem rgba(255, 255, 255, 0.601);
    border: 0px;
}
.box-background{
    background: var(--background-color);
    backdrop-filter: blur(1px);
    border-radius: min(3dvw, 32px);
    padding: 1rem;
    box-sizing: border-box;
    overflow: hidden;
    border: 0px;
}
button{
    font-size: 1rem;
    border-radius: 1rem;
    padding: 0.7rem;
    color: var(--background-color);
    font-weight: bold;
    border: 0px;
    background: linear-gradient(140deg, var(--main-color), rgb(0, 69, 130));
}
.button-hover:hover{
    transform: scale(1.05);
    cursor: pointer;
}
.button-hover:active{
    box-shadow: inset -0.1rem -0.1rem 0.2rem rgba(255, 255, 255, 0.89), inset 0.2rem 0.2rem 0.5rem rgba(0, 0, 0, 0.478);
    transform: scale(0.99);
}
.glass-effect{
    background: rgba(255, 255, 255, 0.08);
    border-radius: min(3dvw, 32px);
    backdrop-filter: blur(3.7px);
    border: 1px solid rgba(255, 255, 255, 0.46);
    box-shadow: 0.4rem 0.4rem 0.4rem rgba(0, 0, 0, 0.478)
}

/* header -------------------------------------------------------------------*/
header{
    min-height: 4rem;
}
.header-flex{
    position: relative;
    display: flex;
    justify-content: space-between;
    align-items: center;
    flex-wrap: nowrap;
    min-width: 320px;
    box-sizing: border-box;
}
.header-flex div{
    flex-grow: 1;
}
.header-flex img{
    height: 2.5rem;
}
.header-flex ul{
    text-decoration: none;
    padding-left: 1rem;
}
.active{
    color: black;
}
.header-flex a{
    font-weight: bold;
    text-decoration: none;
}
.header-flex ul:active{
    transform: scale(0.9);
    outline: 0rem solid var(--main-color);
}
.header-flex a:active{
    outline: 0rem solid var(--main-color);
}
/* footer --------------------------------------------------*/
footer{
    box-sizing: border-box;
    min-height: 4rem;
    margin: 0px;
    justify-content: center;
    align-content: center;
    position: relative;
    
}

footer span{
    position: relative;
    margin-left: 1.2rem ;
}
.gmail-icon::before{
    position: absolute;
    left: -1.1rem;
    content: "";
    aspect-ratio: 1/1;
    width: 1rem;
    background-image: url("../img/icons/gmail.png");
    background-size: contain;
    background-repeat: no-repeat;
    background-position: center;
}
.github-icon::before{
    position: absolute;
    left: -1.2rem;
    content: "";
    aspect-ratio: 1/1;
    width: 1rem;
    background-image: url("../img/icons/github.png");
    background-size: contain;
    background-repeat: no-repeat;
    background-position: center;
}
footer .svg{
    position: absolute;
    top: -2rem;
    left: 0px;
    height: 3rem;
    width: 3rem;
    padding: 0px;
}
footer .svg svg{
    height: 100%;
    width: 100%;
}
footer div{
    padding-block: 1rem;
}
/* @media --------------------------------------------------*/
@media only screen and (max-width: 800px) {
    .wraper{
        width: clamp(320px, calc(100% - 0.5em), 2000px);
    }
}
/* animation --------------------------------------------------*/
#Layer_1{

    animation-name: bounce;
    animation-duration: 10s;
    animation-iteration-count: infinite;
    animation-timing-function: linear;
}
@keyframes bounce {
    0%{
        transform:translateY(0rem);
    }
    2%{
        transform:translateY(3.5rem);
    }
    4%{
        transform: scaleY(1);
    }
    6%{
        transform: scaleY(0.9);
    }
    8%{
        transform:translateY(5rem);
    }
    10%{
        transform:translateY(3.5rem);
    }
    12%{
        transform:translateY(0rem);
    }
    13%{
        transform:translateY(5rem);
    }
    100%{
        transform:translateY(5rem);
    }
}
.left-to-center-animation{
    animation: leftToCenter 0.5s ease-in normal forwards;
}
@keyframes leftToCenter {
    0%{
        opacity: 0;
        transform: scale(0.9) translateX(-20rem);
    }
    70%{
        transform: scale(0.9) translateX(0);
        opacity: 1;
    }
    100%{
        transform: scale(1) translateX(0);
    }
}
.right-to-center-animation{
    animation: rightToCenter 0.5s ease-in normal forwards;
}
@keyframes rightToCenter {
    0%{
        opacity: 0;
        transform: scale(0.9) translateX(20rem);
    }
    70%{
        transform: scale(0.9) translateX(0);
        opacity: 1;
    }
    100%{
        transform: scale(1) translateX(0);
    }
}
.scale-animation{
    animation: toNormalScale 0.2s ease-in normal forwards;
}
@keyframes toNormalScale{
    from{
        opacity: 0;
        transform: scale(0.5) translateY(-50rem);
    }
    to{
        opacity: 1;
        transform: scale(1) translateY(0rem);
    }
}